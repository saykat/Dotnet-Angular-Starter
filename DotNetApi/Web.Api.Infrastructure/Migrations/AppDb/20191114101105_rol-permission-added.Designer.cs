// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Api.Infrastructure.Data;

namespace Web.Api.Infrastructure.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191114101105_rol-permission-added")]
    partial class rolpermissionadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.PermissionMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<Guid>("PermissionId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionMaps");
                });

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime>("Expires");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("RemoteIpAddress");

                    b.Property<string>("Token");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FirstName");

                    b.Property<string>("IdentityId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.PermissionMap", b =>
                {
                    b.HasOne("Web.Api.Core.Domain.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Web.Api.Core.Domain.Entities.Role", "Role")
                        .WithMany("PermissionMaps")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Web.Api.Core.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Web.Api.Core.Domain.Entities.User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
